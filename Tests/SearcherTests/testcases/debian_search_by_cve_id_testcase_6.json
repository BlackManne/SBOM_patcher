{"No": "CVE-2023-38545", "source_url": "https://security-tracker.debian.org/tracker/CVE-2023-38545", "ref_links": ["https://curl.se/docs/CVE-2023-38545.html", "Introduced by:https://github.com/curl/curl/commit/4a4b63daaa01ef59b131d91e8e6e6dfe275c0f08(curl-7_69_0)", "Fixed by:https://github.com/curl/curl/commit/fb4415d8aee6c1045be932a34fe6107c2f5ed147(curl-8_4_0)", "https://daniel.haxx.se/blog/2023/10/11/how-i-made-a-heap-overflow-in-curl/"], "patch_list": [{"patch_url": "https://github.com/curl/curl/commit/fb4415d8aee6c1045be932a34fe6107c2f5ed147", "service_name": "github_commit", "patch_detail": {"message": "socks: return error if hostname too long for remote resolve\n\nPrior to this change the state machine attempted to change the remote\nresolve to a local resolve if the hostname was longer than 255\ncharacters. Unfortunately that did not work as intended and caused a\nsecurity issue.\n\nBug: https://curl.se/docs/CVE-2023-38545.html", "changes": {"total": 74, "additions": 69, "deletions": 5}, "files": [{"filename": "lib/socks.c", "additions": 4, "deletions": 4, "blob_url": "https://github.com/curl/curl/blob/fb4415d8aee6c1045be932a34fe6107c2f5ed147/lib%2Fsocks.c", "diff": "@@ -587,9 +587,9 @@ static CURLproxycode do_SOCKS5(struct Curl_cfilter *cf,\n \n     /* RFC1928 chapter 5 specifies max 255 chars for domain name in packet */\n     if(!socks5_resolve_local && hostname_len > 255) {\n-      infof(data, \"SOCKS5: server resolving disabled for hostnames of \"\n-            \"length > 255 [actual len=%zu]\", hostname_len);\n-      socks5_resolve_local = TRUE;\n+      failf(data, \"SOCKS5: the destination hostname is too long to be \"\n+            \"resolved remotely by the proxy.\");\n+      return CURLPX_LONG_HOSTNAME;\n     }\n \n     if(auth & ~(CURLAUTH_BASIC | CURLAUTH_GSSAPI))\n@@ -903,7 +903,7 @@ static CURLproxycode do_SOCKS5(struct Curl_cfilter *cf,\n       }\n       else {\n         socksreq[len++] = 3;\n-        socksreq[len++] = (char) hostname_len; /* one byte address length */\n+        socksreq[len++] = (unsigned char) hostname_len; /* one byte length */\n         memcpy(&socksreq[len], sx->hostname, hostname_len); /* w/o NULL */\n         len += hostname_len;\n       }"}, {"filename": "tests/data/Makefile.inc", "additions": 1, "deletions": 1, "blob_url": "https://github.com/curl/curl/blob/fb4415d8aee6c1045be932a34fe6107c2f5ed147/tests%2Fdata%2FMakefile.inc", "diff": "@@ -101,7 +101,7 @@ test681 test682 test683 test684 test685 test686 test687 test688 \\\n test700 test701 test702 test703 test704 test705 test706 test707 test708 \\\n test709 test710 test711 test712 test713 test714 test715 test716 test717 \\\n test718 test719 test720 test721 test722 test723 test724 test725 test726 \\\n-test727 \\\n+test727 test728 \\\n \\\n test799 test800 test801 test802 test803 test804 test805 test806 test807 \\\n test808 test809 test810 test811 test812 test813 test814 test815 test816 \\"}, {"filename": "tests/data/test728", "additions": 64, "deletions": 0, "blob_url": "https://github.com/curl/curl/blob/fb4415d8aee6c1045be932a34fe6107c2f5ed147/tests%2Fdata%2Ftest728", "diff": "@@ -0,0 +1,64 @@\n+<testcase>\n+<info>\n+<keywords>\n+HTTP\n+HTTP GET\n+SOCKS5\n+SOCKS5h\n+followlocation\n+</keywords>\n+</info>\n+\n+#\n+# Server-side\n+<reply>\n+# The hostname in this redirect is 256 characters and too long (> 255) for\n+# SOCKS5 remote resolve. curl must return error CURLE_PROXY in this case.\n+<data>\n+HTTP/1.1 301 Moved Permanently\n+Location: http://AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/\n+Content-Length: 0\n+Connection: close\n+\n+</data>\n+</reply>\n+\n+#\n+# Client-side\n+<client>\n+<features>\n+proxy\n+</features>\n+<server>\n+http\n+socks5\n+</server>\n+ <name>\n+SOCKS5h with HTTP redirect to hostname too long\n+ </name>\n+ <command>\n+--no-progress-meter --location --proxy socks5h://%HOSTIP:%SOCKSPORT http://%HOSTIP:%HTTPPORT/%TESTNUMBER\n+</command>\n+</client>\n+\n+#\n+# Verify data after the test has been \"shot\"\n+<verify>\n+<protocol crlf=\"yes\">\n+GET /%TESTNUMBER HTTP/1.1\n+Host: %HOSTIP:%HTTPPORT\n+User-Agent: curl/%VERSION\n+Accept: */*\n+\n+</protocol>\n+<errorcode>\n+97\n+</errorcode>\n+# the error message is verified because error code CURLE_PROXY (97) may be\n+# returned for any number of reasons and we need to make sure it is\n+# specifically for the reason below so that we know the check is working.\n+<stderr mode=\"text\">\n+curl: (97) SOCKS5: the destination hostname is too long to be resolved remotely by the proxy.\n+</stderr>\n+</verify>\n+</testcase>"}]}, "time": "2024-08-18 22:30:57"}]}