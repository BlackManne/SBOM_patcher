{
    "No": "CVE-2024-8572",
    "advisories_list": [
        "https://nvd.nist.gov/vuln/detail/CVE-2024-8572",
        "gouniverse/cms#5",
        "gouniverse/cms#5 (comment)",
        "gouniverse/cms@3e661cd",
        "https://github.com/gouniverse/cms/releases/tag/v1.4.1",
        "https://vuldb.com/?ctiid.276802",
        "https://vuldb.com/?id.276802",
        "https://vuldb.com/?submit.401896"
    ],
    "affected_software": [],
    "aliyun_list": [
        {
            "patch_url": "https://github.com/gouniverse/cms/commit/3e661cdfb4beeb9fe2ad507cdb8104c0b17d072c",
            "service_name": "github_commit",
            "patch_detail": {
                "message": "fix potential XSS vulnerability",
                "changes": {
                    "total": 23,
                    "additions": 15,
                    "deletions": 8
                },
                "files": [
                    {
                        "filename": "PageBuildHtml.go",
                        "additions": 15,
                        "deletions": 8,
                        "blob_url": "https://github.com/gouniverse/cms/blob/3e661cdfb4beeb9fe2ad507cdb8104c0b17d072c/PageBuildHtml.go",
                        "diff": "@@ -4,6 +4,7 @@ import (\n \t\"net/http\"\n \t\"strings\"\n \n+\t\"github.com/gouniverse/hb\"\n \t\"github.com/samber/lo\"\n )\n \n@@ -12,18 +13,24 @@ func (cms *Cms) PageRenderHtmlByAlias(r *http.Request, alias string, language st\n \tpage, err := cms.PageFindByAlias(alias)\n \n \tif err != nil {\n-\t\tcms.LogStore.ErrorWithContext(\"At pageBuldHTMLByAlias\", err.Error())\n-\t\treturn \"Page with alias '\" + alias + \"' not found\"\n+\t\tcms.LogStore.ErrorWithContext(\"At PageRenderHtmlByAlias\", err.Error())\n+\t\treturn hb.NewDiv().\n+\t\t\tText(`Page with alias '`).Text(alias).Text(`' not found`).\n+\t\t\tToHTML()\n \t}\n \n \tif page == nil {\n-\t\treturn \"Page with alias '\" + alias + \"' not found\"\n+\t\treturn hb.NewDiv().\n+\t\t\tText(`Page with alias '`).Text(alias).Text(`' not found`).\n+\t\t\tToHTML()\n \t}\n \n \tpageAttrs, err := page.GetAttributes()\n \n \tif err != nil {\n-\t\treturn \"Page '\" + alias + \"' io exception\"\n+\t\treturn hb.NewDiv().\n+\t\t\tText(`Page with alias '`).Text(alias).Text(`' io exception`).\n+\t\t\tToHTML()\n \t}\n \n \tpageContent := \"\"\n@@ -60,7 +67,7 @@ func (cms *Cms) PageRenderHtmlByAlias(r *http.Request, alias string, language st\n \tfinalContent := lo.If(pageTemplateID == \"\", pageContent).ElseF(func() string {\n \t\tcontent, err := cms.TemplateContentFindByID(pageTemplateID)\n \t\tif err != nil {\n-\t\t\tcms.LogStore.ErrorWithContext(\"At pageBuldHTMLByAlias\", err.Error())\n+\t\t\tcms.LogStore.ErrorWithContext(\"At PageRenderHtmlByAlias\", err.Error())\n \t\t}\n \t\treturn content\n \t})\n@@ -82,19 +89,19 @@ func (cms *Cms) PageRenderHtmlByAlias(r *http.Request, alias string, language st\n \tfinalContent, err = cms.ContentRenderBlocks(finalContent)\n \n \tif err != nil {\n-\t\tcms.LogStore.ErrorWithContext(\"At pageBuldHTMLByAlias\", err.Error())\n+\t\tcms.LogStore.ErrorWithContext(\"At PageRenderHtmlByAlias\", err.Error())\n \t}\n \n \tfinalContent, err = cms.ContentRenderShortcodes(r, finalContent)\n \n \tif err != nil {\n-\t\tcms.LogStore.ErrorWithContext(\"At pageBuldHTMLByAlias\", err.Error())\n+\t\tcms.LogStore.ErrorWithContext(\"At PageRenderHtmlByAlias\", err.Error())\n \t}\n \n \tfinalContent, err = cms.ContentRenderTranslations(finalContent, language)\n \n \tif err != nil {\n-\t\tcms.LogStore.ErrorWithContext(\"At pageBuldHTMLByAlias\", err.Error())\n+\t\tcms.LogStore.ErrorWithContext(\"At PageRenderHtmlByAlias\", err.Error())\n \t}\n \n \treturn finalContent"
                    }
                ]
            },
            "time": "2024-09-09 17:03:22"
        },
        {
            "patch_url": "https://github.com/gouniverse/cms/issues/5",
            "service_name": "github_issue",
            "patch_detail": {
                "title": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') in FrontendHandler.go",
                "labels": [],
                "created_time": "2024-09-03T15:08:24Z",
                "updated_time": "2024-09-05T07:52:18Z",
                "closed_time": "2024-09-05T07:52:18Z",
                "content": "Cause of vulnerability: A potential Cross-site scripting (XSS) vulnerability exists on line 19 of the FrontendHandler.go file in the code. The vulnerability is caused by user-supplied values being inserted directly into the generated HTML page without proper processing or escaping. Specifically, the 'PageRenderHtmlByAlias' function takes an alias parameter and inserts it directly into the returned HTML string. If an attacker is able to control this alias parameter and inject malicious scripts, these scripts will be executed in the user's browser, resulting in a cross-site scripting attack. This situation is very dangerous because it allows an attacker to execute arbitrary code or steal user information.\nFrontendHandler.go line 33-52\n```\nfunc (cms *Cms) FrontendHandlerRenderAsString(w http.ResponseWriter, r *http.Request) string {\n\turi := r.RequestURI\n\tif strings.HasSuffix(uri, \".ico\") {\n\t\treturn \"\"\n\t}\n\tlanguageAny := r.Context().Value(LanguageKey{})\n\tlanguage := utils.ToString(languageAny)\n\tif cms.translationsEnabled {\n\t\tisValidLanguage := lo.Contains(lo.Keys(cms.translationLanguages), language)\n\t\tif !isValidLanguage {\n\t\t\tlanguage = cms.translationLanguageDefault\n\t\t}\n\t}\n\treturn cms.PageRenderHtmlByAlias(r, r.URL.Path, language)\n}\n```\nPageBuildHtml.go line 10-22\n```\n// PageRenderHtmlByAlias builds the HTML of a page based on its alias\nfunc (cms *Cms) PageRenderHtmlByAlias(r *http.Request, alias string, language string) string {\n\tpage, err := cms.PageFindByAlias(alias)\n\tif err != nil {\n\t\tcms.LogStore.ErrorWithContext(\"At pageBuldHTMLByAlias\", err.Error())\n\t\treturn \"Page with alias '\" + alias + \"' not found\"\n\t}\n\tif page == nil {\n\t\treturn \"Page with alias '\" + alias + \"' not found\"\n\t}\n\tpageAttrs, err := page.GetAttributes()\n\tif err != nil {\n\t\treturn \"Page '\" + alias + \"' io exception\"\n\t}\n```\n",
                "comments": [
                    {
                        "type": "comment",
                        "content": "Thank you @gtqbhksl . Nice catch\n\nThis has now been fixed."
                    }
                ]
            },
            "time": "2024-09-09 17:03:23"
        },
        {
            "patch_url": "https://github.com/gouniverse/cms/issues/5#issuecomment-2330848731",
            "service_name": "github_issue",
            "patch_detail": {
                "title": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') in FrontendHandler.go",
                "labels": [],
                "created_time": "2024-09-03T15:08:24Z",
                "updated_time": "2024-09-05T07:52:18Z",
                "closed_time": "2024-09-05T07:52:18Z",
                "content": "Cause of vulnerability: A potential Cross-site scripting (XSS) vulnerability exists on line 19 of the FrontendHandler.go file in the code. The vulnerability is caused by user-supplied values being inserted directly into the generated HTML page without proper processing or escaping. Specifically, the 'PageRenderHtmlByAlias' function takes an alias parameter and inserts it directly into the returned HTML string. If an attacker is able to control this alias parameter and inject malicious scripts, these scripts will be executed in the user's browser, resulting in a cross-site scripting attack. This situation is very dangerous because it allows an attacker to execute arbitrary code or steal user information.\nFrontendHandler.go line 33-52\n```\nfunc (cms *Cms) FrontendHandlerRenderAsString(w http.ResponseWriter, r *http.Request) string {\n\turi := r.RequestURI\n\tif strings.HasSuffix(uri, \".ico\") {\n\t\treturn \"\"\n\t}\n\tlanguageAny := r.Context().Value(LanguageKey{})\n\tlanguage := utils.ToString(languageAny)\n\tif cms.translationsEnabled {\n\t\tisValidLanguage := lo.Contains(lo.Keys(cms.translationLanguages), language)\n\t\tif !isValidLanguage {\n\t\t\tlanguage = cms.translationLanguageDefault\n\t\t}\n\t}\n\treturn cms.PageRenderHtmlByAlias(r, r.URL.Path, language)\n}\n```\nPageBuildHtml.go line 10-22\n```\n// PageRenderHtmlByAlias builds the HTML of a page based on its alias\nfunc (cms *Cms) PageRenderHtmlByAlias(r *http.Request, alias string, language string) string {\n\tpage, err := cms.PageFindByAlias(alias)\n\tif err != nil {\n\t\tcms.LogStore.ErrorWithContext(\"At pageBuldHTMLByAlias\", err.Error())\n\t\treturn \"Page with alias '\" + alias + \"' not found\"\n\t}\n\tif page == nil {\n\t\treturn \"Page with alias '\" + alias + \"' not found\"\n\t}\n\tpageAttrs, err := page.GetAttributes()\n\tif err != nil {\n\t\treturn \"Page '\" + alias + \"' io exception\"\n\t}\n```\n",
                "comments": []
            },
            "time": "2024-09-09 17:03:24"
        },
        {
            "patch_url": "https://github.com/gouniverse/cms/releases/tag/v1.4.1",
            "service_name": "github",
            "patch_detail": null,
            "time": "2024-09-09 17:03:24"
        },
        {
            "patch_url": "https://vuldb.com/?ctiid.276802",
            "service_name": null,
            "patch_detail": null,
            "time": "2024-09-09 17:03:24"
        },
        {
            "patch_url": "https://vuldb.com/?id.276802",
            "service_name": null,
            "patch_detail": null,
            "time": "2024-09-09 17:03:24"
        },
        {
            "patch_url": "https://vuldb.com/?submit.401896",
            "service_name": null,
            "patch_detail": null,
            "time": "2024-09-09 17:03:24"
        }
    ],
    "cve_modified_time": null,
    "cve_published_time": "2024-09-08",
    "debian_list": [],
    "description": {
        "nvd_description": "A vulnerability was found in Gouniverse GoLang CMS 1.4.0. It has been declared as problematic. This vulnerability affects the function PageRenderHtmlByAlias of the file FrontendHandler.go. The manipulation of the argument alias leads to cross site scripting. The attack can be initiated remotely. Upgrading to version 1.4.1 is able to address this issue. The patch is identified as 3e661cdfb4beeb9fe2ad507cdb8104c0b17d072c. It is recommended to upgrade the affected component.",
        "alicloud_description": "\u5728 Gouniverse GoLang CMS 1.4.0 \u7248\u672c\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u5df2\u88ab\u6807\u8bb0\u4e3a\u95ee\u9898\u6027\u6f0f\u6d1e\u3002\u8be5\u6f0f\u6d1e\u5f71\u54cd\u4e86 FrontendHandler.go \u6587\u4ef6\u4e2d\u7684 PageRenderHtmlByAlias \u51fd\u6570\u3002\u53c2\u6570 alias \u7684\u64cd\u4f5c\u53ef\u80fd\u5bfc\u81f4\u8de8\u7ad9\u811a\u672c\u653b\u51fb\u3002\u653b\u51fb\u53ef\u4ee5\u8fdc\u7a0b\u53d1\u8d77\u3002\u5347\u7ea7\u5230 1.4.1 \u7248\u672c\u53ef\u4ee5\u89e3\u51b3\u6b64\u95ee\u9898\u3002\u8865\u4e01\u7684\u6807\u8bc6\u7b26\u4e3a 3e661cdfb4beeb9fe2ad507cdb8104c0b17d072c\u3002\u5efa\u8bae\u5347\u7ea7\u53d7\u5f71\u54cd\u7684\u7ec4\u4ef6\u3002"
    },
    "exploit": [],
    "github_advisories_patches": "",
    "merge_time": "2024-09-09 17:16:34",
    "name": "Gouniverse GoLang CMS FrontendHandler.go PageRenderHtmlByAlias \u8de8\u7ad9\u70b9\u811a\u672c\uff08CVE-2024-8572\uff09",
    "patch_list": {
        "nvd": [],
        "debian": []
    },
    "rate": "N/A",
    "score": "N/A",
    "source_urls": {
        "nvd_source_url": "https://nvd.nist.gov/vuln/detail/CVE-2024-8572",
        "alicloud_source_url": "https://avd.aliyun.com/detail?id=AVD-2024-8572",
        "debian": "https://security-tracker.debian.org/tracker/CVE-2024-8572",
        "advisories": "https://github.com/advisories/GHSA-pv7h-hg6m-82j8"
    },
    "third_party_list": [],
    "title": "NVD - CVE-2024-8572",
    "type": "CWE-79",
    "vendor_list": []
}