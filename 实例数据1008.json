{
    "_id": {
      "$oid": "66e29397b70a6779390218b6"
    },
    "No": "CVE-2024-8096",
    "advisories_list": [
      "https://nvd.nist.gov/vuln/detail/CVE-2024-8096",
      "https://hackerone.com/reports/2669852",
      "https://curl.se/docs/CVE-2024-8096.html",
      "https://curl.se/docs/CVE-2024-8096.json"
    ],
    "affected_software": [
      {
        "software_name": "curl",
        "interval_version": [
          "-Up to(excluding)8.10.0-r0"
        ],
        "detail_version": [
          "-Up to(excluding)8.10.0-r0"
        ],
        "raw_version": [
          "-Up to(excluding)8.10.0-r0"
        ]
      }
    ],
    "alicloud_list": [
      "https://curl.se/docs/CVE-2024-8096.html",
      "https://curl.se/docs/CVE-2024-8096.json",
      "https://hackerone.com/reports/2669852"
    ],
    "cve_modified_time": null,
    "cve_published_time": "2024-09-11",
    "debian_list": [
      "https://curl.se/docs/CVE-2024-8096.html",
      "Introduced with:https://github.com/curl/curl/commit/f13669a375f5bfd14797bda91642cabe076974fa(curl-7_41_0)",
      "Fixed by:https://github.com/curl/curl/commit/aeb1a281cab13c7ba791cb104e556b20e713941f(curl-8_10_0)"
    ],
    "description": {
      "nvd_description": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine.  If the returned status reports another error than 'revoked' (like for example 'unauthorized') it is not treated as a bad certficate.",
      "alicloud_description": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine.  If the returned status reports another error than 'revoked' (like for example 'unauthorized') it is not treated as a bad certficate."
    },
    "exploit": [],
    "github_advisories_patches": "",
    "merge_time": "2024-09-12 15:09:11",
    "name": "使用 GnuTLS 绕过 OCSP 装订（CVE-2024-8096）",
    "patch_list": {
      "nvd": [],
      "debian": [
        {
          "patch_url": "https://github.com/curl/curl/commit/aeb1a281cab13c7ba791cb104e556b20e713941f",
          "service_name": "github_commit",
          "patch_detail": {
            "message": "gtls: fix OCSP stapling management\n\nReported-by: Hiroki Kurosawa\nCloses #14642",
            "changes": {
              "total": 146,
              "additions": 73,
              "deletions": 73
            },
            "files": [
              {
                "filename": "lib/vtls/gtls.c",
                "additions": 73,
                "deletions": 73,
                "blob_url": "https://github.com/curl/curl/blob/aeb1a281cab13c7ba791cb104e556b20e713941f/lib%2Fvtls%2Fgtls.c",
                "diff": "@@ -850,6 +850,13 @@ static CURLcode gtls_client_init(struct Curl_cfilter *cf,\n   init_flags |= GNUTLS_NO_TICKETS;\n #endif\n \n+#if defined(GNUTLS_NO_STATUS_REQUEST)\n+  if(!config->verifystatus)\n+    /* Disable the \"status_request\" TLS extension, enabled by default since\n+       GnuTLS 3.8.0. */\n+    init_flags |= GNUTLS_NO_STATUS_REQUEST;\n+#endif\n+\n   rc = gnutls_init(&gtls->session, init_flags);\n   if(rc != GNUTLS_E_SUCCESS) {\n     failf(data, \"gnutls_init() failed: %d\", rc);\n@@ -1321,104 +1328,97 @@ Curl_gtls_verifyserver(struct Curl_easy *data,\n     infof(data, \"  server certificate verification SKIPPED\");\n \n   if(config->verifystatus) {\n-    if(gnutls_ocsp_status_request_is_checked(session, 0) == 0) {\n-      gnutls_datum_t status_request;\n-      gnutls_ocsp_resp_t ocsp_resp;\n+    gnutls_datum_t status_request;\n+    gnutls_ocsp_resp_t ocsp_resp;\n+    gnutls_ocsp_cert_status_t status;\n+    gnutls_x509_crl_reason_t reason;\n \n-      gnutls_ocsp_cert_status_t status;\n-      gnutls_x509_crl_reason_t reason;\n+    rc = gnutls_ocsp_status_request_get(session, &status_request);\n \n-      rc = gnutls_ocsp_status_request_get(session, &status_request);\n+    if(rc == GNUTLS_E_REQUESTED_DATA_NOT_AVAILABLE) {\n+      failf(data, \"No OCSP response received\");\n+      return CURLE_SSL_INVALIDCERTSTATUS;\n+    }\n \n-      infof(data, \" server certificate status verification FAILED\");\n+    if(rc < 0) {\n+      failf(data, \"Invalid OCSP response received\");\n+      return CURLE_SSL_INVALIDCERTSTATUS;\n+    }\n \n-      if(rc == GNUTLS_E_REQUESTED_DATA_NOT_AVAILABLE) {\n-        failf(data, \"No OCSP response received\");\n-        return CURLE_SSL_INVALIDCERTSTATUS;\n-      }\n+    gnutls_ocsp_resp_init(&ocsp_resp);\n \n-      if(rc < 0) {\n-        failf(data, \"Invalid OCSP response received\");\n-        return CURLE_SSL_INVALIDCERTSTATUS;\n-      }\n+    rc = gnutls_ocsp_resp_import(ocsp_resp, &status_request);\n+    if(rc < 0) {\n+      failf(data, \"Invalid OCSP response received\");\n+      return CURLE_SSL_INVALIDCERTSTATUS;\n+    }\n \n-      gnutls_ocsp_resp_init(&ocsp_resp);\n+    (void)gnutls_ocsp_resp_get_single(ocsp_resp, 0, NULL, NULL, NULL, NULL,\n+                                      &status, NULL, NULL, NULL, &reason);\n \n-      rc = gnutls_ocsp_resp_import(ocsp_resp, &status_request);\n-      if(rc < 0) {\n-        failf(data, \"Invalid OCSP response received\");\n-        return CURLE_SSL_INVALIDCERTSTATUS;\n-      }\n+    switch(status) {\n+    case GNUTLS_OCSP_CERT_GOOD:\n+      break;\n \n-      (void)gnutls_ocsp_resp_get_single(ocsp_resp, 0, NULL, NULL, NULL, NULL,\n-                                        &status, NULL, NULL, NULL, &reason);\n+    case GNUTLS_OCSP_CERT_REVOKED: {\n+      const char *crl_reason;\n \n-      switch(status) {\n-      case GNUTLS_OCSP_CERT_GOOD:\n+      switch(reason) {\n+      default:\n+      case GNUTLS_X509_CRLREASON_UNSPECIFIED:\n+        crl_reason = \"unspecified reason\";\n         break;\n \n-      case GNUTLS_OCSP_CERT_REVOKED: {\n-        const char *crl_reason;\n-\n-        switch(reason) {\n-          default:\n-          case GNUTLS_X509_CRLREASON_UNSPECIFIED:\n-            crl_reason = \"unspecified reason\";\n-            break;\n-\n-          case GNUTLS_X509_CRLREASON_KEYCOMPROMISE:\n-            crl_reason = \"private key compromised\";\n-            break;\n-\n-          case GNUTLS_X509_CRLREASON_CACOMPROMISE:\n-            crl_reason = \"CA compromised\";\n-            break;\n-\n-          case GNUTLS_X509_CRLREASON_AFFILIATIONCHANGED:\n-            crl_reason = \"affiliation has changed\";\n-            break;\n+      case GNUTLS_X509_CRLREASON_KEYCOMPROMISE:\n+        crl_reason = \"private key compromised\";\n+        break;\n \n-          case GNUTLS_X509_CRLREASON_SUPERSEDED:\n-            crl_reason = \"certificate superseded\";\n-            break;\n+      case GNUTLS_X509_CRLREASON_CACOMPROMISE:\n+        crl_reason = \"CA compromised\";\n+        break;\n \n-          case GNUTLS_X509_CRLREASON_CESSATIONOFOPERATION:\n-            crl_reason = \"operation has ceased\";\n-            break;\n+      case GNUTLS_X509_CRLREASON_AFFILIATIONCHANGED:\n+        crl_reason = \"affiliation has changed\";\n+        break;\n \n-          case GNUTLS_X509_CRLREASON_CERTIFICATEHOLD:\n-            crl_reason = \"certificate is on hold\";\n-            break;\n+      case GNUTLS_X509_CRLREASON_SUPERSEDED:\n+        crl_reason = \"certificate superseded\";\n+        break;\n \n-          case GNUTLS_X509_CRLREASON_REMOVEFROMCRL:\n-            crl_reason = \"will be removed from delta CRL\";\n-            break;\n+      case GNUTLS_X509_CRLREASON_CESSATIONOFOPERATION:\n+        crl_reason = \"operation has ceased\";\n+        break;\n \n-          case GNUTLS_X509_CRLREASON_PRIVILEGEWITHDRAWN:\n-            crl_reason = \"privilege withdrawn\";\n-            break;\n+      case GNUTLS_X509_CRLREASON_CERTIFICATEHOLD:\n+        crl_reason = \"certificate is on hold\";\n+        break;\n \n-          case GNUTLS_X509_CRLREASON_AACOMPROMISE:\n-            crl_reason = \"AA compromised\";\n-            break;\n-        }\n+      case GNUTLS_X509_CRLREASON_REMOVEFROMCRL:\n+        crl_reason = \"will be removed from delta CRL\";\n+        break;\n \n-        failf(data, \"Server certificate was revoked: %s\", crl_reason);\n+      case GNUTLS_X509_CRLREASON_PRIVILEGEWITHDRAWN:\n+        crl_reason = \"privilege withdrawn\";\n         break;\n-      }\n \n-      default:\n-      case GNUTLS_OCSP_CERT_UNKNOWN:\n-        failf(data, \"Server certificate status is unknown\");\n+      case GNUTLS_X509_CRLREASON_AACOMPROMISE:\n+        crl_reason = \"AA compromised\";\n         break;\n       }\n \n-      gnutls_ocsp_resp_deinit(ocsp_resp);\n+      failf(data, \"Server certificate was revoked: %s\", crl_reason);\n+      break;\n+    }\n \n-      return CURLE_SSL_INVALIDCERTSTATUS;\n+    default:\n+    case GNUTLS_OCSP_CERT_UNKNOWN:\n+      failf(data, \"Server certificate status is unknown\");\n+      break;\n     }\n-    else\n-      infof(data, \"  server certificate status verification OK\");\n+\n+    gnutls_ocsp_resp_deinit(ocsp_resp);\n+    if(status != GNUTLS_OCSP_CERT_GOOD)\n+      return CURLE_SSL_INVALIDCERTSTATUS;\n   }\n   else\n     infof(data, \"  server certificate status verification SKIPPED\");"
              }
            ]
          },
          "time": "2024-09-12 15:04:47"
        }
      ]
    },
    "rate": "6.5",
    "score": "N/A",
    "source_urls": {
      "nvd_source_url": "https://nvd.nist.gov/vuln/detail/CVE-2024-8096",
      "alicloud_source_url": "https://avd.aliyun.com/detail?id=AVD-2024-8096",
      "debian": "https://security-tracker.debian.org/tracker/CVE-2024-8096",
      "advisories": "https://github.com/advisories/GHSA-gv3v-x3f3-7fxm"
    },
    "third_party_list": [],
    "title": "NVD - CVE-2024-8096",
    "type": "未定义",
    "vendor_list": []
  }